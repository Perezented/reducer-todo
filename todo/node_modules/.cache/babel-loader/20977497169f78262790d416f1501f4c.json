{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Web28Git\\\\Lambda\\\\reducer-todo\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React, { setState } from 'react';\nimport { connect } from 'react-redux';\nimport ListItem from './ListItem';\nimport { addTodo } from '../actions';\n\nconst List = props => {\n  const state = {\n    newTodo: ''\n  };\n\n  const addTodo = e => {\n    e.preventDefault();\n    props.addTodo(state.newTodo);\n  }; // const handleChanges = (e) => setState({ newTodo: e.target.value });\n\n\n  let input;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Todo: \"), props.todoList.map(value => /*#__PURE__*/React.createElement(ListItem, {\n    item: value.item,\n    key: value.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!input.value.trim()) {\n        return;\n      }\n\n      dispatchEvent(addTodo(input.value));\n      input.value = '';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: node => input = node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Add Todo\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addTodo\n})(List);","map":{"version":3,"sources":["C:/Users/Michael/Desktop/Web28Git/Lambda/reducer-todo/todo/src/component/List.js"],"names":["React","setState","connect","ListItem","addTodo","List","props","state","newTodo","e","preventDefault","input","todoList","map","value","item","id","trim","dispatchEvent","node","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAE;AADC,GAAd;;AAIA,QAAMJ,OAAO,GAAIK,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,KAAK,CAACF,OAAN,CAAcG,KAAK,CAACC,OAApB;AACH,GAHD,CALoB,CASpB;;;AACA,MAAIG,KAAJ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAoBC,KAAD,iBAChB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAtB;AAA4B,IAAA,GAAG,EAAED,KAAK,CAACE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,eAKI;AACI,IAAA,QAAQ,EAAGP,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,CAACC,KAAK,CAACG,KAAN,CAAYG,IAAZ,EAAL,EAAyB;AACrB;AACH;;AACDC,MAAAA,aAAa,CAACd,OAAO,CAACO,KAAK,CAACG,KAAP,CAAR,CAAb;AACAH,MAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACH,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAO,IAAA,GAAG,EAAGK,IAAD,IAAWR,KAAK,GAAGQ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CALJ,CADJ;AAqBH,CAhCD;;AAiCA,MAAMC,eAAe,GAAIb,KAAD,IAAW;AAC/B,SAAO;AACHK,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AADb,GAAP;AAGH,CAJD;;AAKA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { setState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListItem from './ListItem';\r\n\r\nimport { addTodo } from '../actions';\r\n\r\nconst List = (props) => {\r\n    const state = {\r\n        newTodo: '',\r\n    };\r\n\r\n    const addTodo = (e) => {\r\n        e.preventDefault();\r\n        props.addTodo(state.newTodo);\r\n    };\r\n    // const handleChanges = (e) => setState({ newTodo: e.target.value });\r\n    let input;\r\n    return (\r\n        <div>\r\n            <h2>Todo: </h2>\r\n            {props.todoList.map((value) => (\r\n                <ListItem item={value.item} key={value.id} />\r\n            ))}\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    if (!input.value.trim()) {\r\n                        return;\r\n                    }\r\n                    dispatchEvent(addTodo(input.value));\r\n                    input.value = '';\r\n                }}\r\n            >\r\n                <input ref={(node) => (input = node)} />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoList: state.todoList,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, { addTodo })(List);\r\n"]},"metadata":{},"sourceType":"module"}