{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Web28Git\\\\Lambda\\\\reducer-todo\\\\todo\\\\src\\\\components\\\\TodoList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({\n  todos,\n  toggleTodo\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, todos.map(todo => /*#__PURE__*/React.createElement(Todo, Object.assign({\n  key: todo.id\n}, todo, {\n  onClick: () => toggleTodo(todo.id, todo.completed),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}))));\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes,\n    completed: PropTypes,\n    text: PropTypes\n  })),\n  toggleTodo: PropTypes\n};\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Michael/Desktop/Web28Git/Lambda/reducer-todo/todo/src/components/TodoList.js"],"names":["React","PropTypes","Todo","TodoList","todos","toggleTodo","map","todo","id","completed","propTypes","arrayOf","shape","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACP,oBAAC,IAAD;AACI,EAAA,GAAG,EAAEA,IAAI,CAACC;AADd,GAEQD,IAFR;AAGI,EAAA,OAAO,EAAE,MAAMF,UAAU,CAACE,IAAI,CAACC,EAAN,EAAUD,IAAI,CAACE,SAAf,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADH,CADL,CADJ;;AAYAN,QAAQ,CAACO,SAAT,GAAqB;AACjBN,EAAAA,KAAK,EAAEH,SAAS,CAACU,OAAV,CACHV,SAAS,CAACW,KAAV,CAAgB;AACZJ,IAAAA,EAAE,EAAEP,SADQ;AAEZQ,IAAAA,SAAS,EAAER,SAFC;AAGZY,IAAAA,IAAI,EAAEZ;AAHM,GAAhB,CADG,CADU;AAQjBI,EAAAA,UAAU,EAAEJ;AARK,CAArB;AAWA,eAAeE,QAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n    <ul>\r\n        {todos.map((todo) => (\r\n            <Todo\r\n                key={todo.id}\r\n                {...todo}\r\n                onClick={() => toggleTodo(todo.id, todo.completed)}\r\n            />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes,\r\n            completed: PropTypes,\r\n            text: PropTypes,\r\n        })\r\n    ),\r\n    toggleTodo: PropTypes,\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}